{
  "hash": "5d2652bf6ece2a50a23b9e79eab1cfa4",
  "result": {
    "markdown": "---\ntitle: \"Clustering\"\ndate: \"2023-11-25\"\nauthor: Swethaa\nimage: \"Image.png\"\n---\n\n```{=html}\n<h2>Clustering</h2> \n<h3>Content</h3>\n    <ul>\n        <li>Introduction</li>\n        <li>What is Clustering</li>\n        <li>Why Clustering</li>\n        <li>Types of Clustering Methods/ Algorithms</li>\n    </ul>\n    <h3>Introduction</h3>\n    <p>sentially an unsupervised learning strategy. Unsupervised learning is a method that draws references from datasets of input data without labelled answers. It is commonly used as a procedure to discover significant structure, explanatory underlying processes, generative qualities, and groups inherent in a set of instances. </p>\n    <h3>What is Clustering</h3>\n    <p>Clustering is the process of separating a population or set of data points into groups so that data points in the same group are more similar to other data points in the same group and different to data points in other groups. It is essentially a collection of items based on their similarity and dissimilarity.</p>\n    <p>Clustering is a form of unsupervised machine learning approach in which comparable data points are grouped together based on particular attributes or qualities. Clustering seeks natural groups or patterns within a dataset without the requirement for labelled output. </p>\n    <h3>Why Clustering</h3>\n    <p>When working with enormous datasets, dividing the data into logical groupings, termed clusters, is an effective approach to analyse them. You could extract value from a big quantity of unstructured data in this manner. It allows you to quickly scan the data for patterns or structures before delving further into the data for particular results.</p>\n    <p>Clustering is critical because it determines the intrinsic grouping of the unlabeled data provided. There are no requirements for good clustering. It is up to the user to determine what criteria will fulfil their needs.</p>\n    <ol>\n        <li>\n            <b>Pattern Recognition:</b>\n            <p>Clustering assists in identifying natural groups or patterns within data that may not be immediately evident. It enables the finding of innate structures and linkages.</p>\n        </li>\n        <li>\n            <b>Data Exploration and Understanding:</b>\n            <p>Data Distribution Insight: Clustering reveals how data points in a collection are distributed and categorised. This is useful for exploratory data analysis and comprehension of the underlying structure.</p>\n        </li>\n        <li><b>Segmentation and Customer Profiling:</b>\n            <p>In business and marketing, clustering is often used to segment customers. It helps to identify groups of customers with similar behavior, preferences or buying habits, which enables targeted marketing strategies.</p>\n        </li>\n\n        <li>\n           <b> Anomaly Detection:</b>\n            <p>Outlier Detection: Clustering can be used to identify unusual patterns or outliers in a data set. Data points that do not match the clustering patterns assigned to them can be considered outliers.</p>\n        </li>\n    </ol>\n    <h3>Types of Clustering Methods/ Algorithms</h3>\n    <table border=\"1\" cellspacing=\"2\" cellpadding=\"2\" style=\"border: double;text-align: center;font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\">\n        <tr>\n            <th><b>Clustering Methods/ Algorithms</b></th>\n            <th><b>Method</b></th>\n            <th><b>Description</b></th>\n            <th><b>Advantages</b></th>\n            <th><b>Disadvantages</b></th>\n        </tr>\n        <tr>\n            <td>K-Means Clustering</td>\n            <td>Partitioning</td>\n            <td>Divides the dataset into a specified number (k) of clusters. </td>\n            <td>Simple and computationally efficient.</td>\n            <td>Sensitive to initial cluster centroids.</td>\n        </tr>\n        <tr>\n            <td>Hierarchical Clustering</td>\n            <td>Agglomerative (bottom-up) or divisive (top-down)</td>\n            <td>Builds a tree-like hierarchy of clusters</td>\n            <td>Provides a hierarchy of clusters, visualized using dendrogram.</td>\n            <td>Computationally more intensive.</td>\n        </tr>\n        <tr>\n            <td>DBSCAN</td>\n            <td>Density-based</td>\n            <td>Forms clusters based on the density of data points</td>\n            <td>Can discover clusters of arbitrary shapes and handles noise well</td>\n            <td>Sensitive to parameter settings</td>\n        </tr>\n        <tr>\n            <td>Mean Shift</td>\n            <td>Centroid-based</td>\n            <td>Iteratively shifts centroids towards the mode of the data distribution</td>\n            <td>Can find irregularly shaped clusters and adapt to varying densities</td>\n            <td>Computationally expensive</td>\n        </tr>\n        <tr>\n            <td>Gaussian Mixture Model (GMM)</td>\n            <td>Probabilistic</td>\n            <td>the data points are generated from a mixture of several Gaussian distributions</td>\n            <td>Can model complex data distributions and provide probabilistic cluster assignments</td>\n            <td>Sensitive to the initial parameters.</td>\n        </tr>\n        <tr>\n            <td>Mean Shift</td>\n            <td>Centroid-based</td>\n            <td>Iteratively shifts centroids towards the mode of the data distribution. The resulting clusters are regions of high data density</td>\n            <td>Can find irregularly shaped clusters and adapt to varying densities</td>\n            <td>Computationally expensive</td>\n        </tr>\n          <tr>\n            <td>Agglomerative Clustering</td>\n            <td>Hierarchical, bottom-up</td>\n            <td>Starts with individual data points as separate clusters and iteratively merges the closest clusters until a stopping criterion is met</td>\n            <td>Can handle different shapes and sizes of clusters</td>\n            <td>Computationally more intensive</td>\n        </tr>\n    </table>\n```\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf = pd.read_csv('IMDB.csv')\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Year</th>\n      <th>Episodes</th>\n      <th>Type</th>\n      <th>Rating</th>\n      <th>Image-src</th>\n      <th>Description</th>\n      <th>Name-href</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1. Breaking Bad</td>\n      <td>2008–2013</td>\n      <td>62 eps</td>\n      <td>TV-MA</td>\n      <td>9.5</td>\n      <td>https://m.media-amazon.com/images/M/MV5BYmQ4YW...</td>\n      <td>A chemistry teacher diagnosed with inoperable ...</td>\n      <td>https://www.imdb.com/title/tt0903747/?ref_=cht...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2. Planet Earth II</td>\n      <td>2016</td>\n      <td>6 eps</td>\n      <td>TV-G</td>\n      <td>9.5</td>\n      <td>https://m.media-amazon.com/images/M/MV5BMGZmYm...</td>\n      <td>David Attenborough returns with a new wildlife...</td>\n      <td>https://www.imdb.com/title/tt5491994/?ref_=cht...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3. Planet Earth</td>\n      <td>2006</td>\n      <td>11 eps</td>\n      <td>TV-PG</td>\n      <td>9.4</td>\n      <td>https://m.media-amazon.com/images/M/MV5BMzMyYj...</td>\n      <td>A documentary series on the wildlife found on ...</td>\n      <td>https://www.imdb.com/title/tt0795176/?ref_=cht...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4. Band of Brothers</td>\n      <td>2001</td>\n      <td>10 eps</td>\n      <td>TV-MA</td>\n      <td>9.4</td>\n      <td>https://m.media-amazon.com/images/M/MV5BMTI3OD...</td>\n      <td>The story of Easy Company of the U.S. Army 101...</td>\n      <td>https://www.imdb.com/title/tt0185906/?ref_=cht...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5. Chernobyl</td>\n      <td>2019</td>\n      <td>5 eps</td>\n      <td>TV-MA</td>\n      <td>9.4</td>\n      <td>https://m.media-amazon.com/images/M/MV5BNTdkN2...</td>\n      <td>In April 1986, an explosion at the Chernobyl n...</td>\n      <td>https://www.imdb.com/title/tt7366338/?ref_=cht...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nIndex(['Name', 'Year', 'Episodes', 'Type', 'Rating', 'Image-src',\n       'Description', 'Name-href'],\n      dtype='object')\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndf['Year']\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n0      2008–2013\n1           2016\n2           2006\n3           2001\n4           2019\n         ...    \n245        2009–\n246    2002–2015\n247    2009–2013\n248    2014–2015\n249    2017–2019\nName: Year, Length: 250, dtype: object\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ndf.dropna(inplace=True)\n```\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndf.isnull().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nName           0\nYear           0\nEpisodes       0\nType           0\nRating         0\nImage-src      0\nDescription    0\nName-href      0\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 6))\nsns.countplot(x='Type', data=df, palette='viridis')\nplt.title('Distribution of TV Shows by Genres')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-2.png){width=816 height=523}\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\ntop_rated_shows = df.sort_values(by='Rating', ascending=False).head(10)\nplt.figure(figsize=(12, 6))\nsns.barplot(x='Rating', y='Name', data=top_rated_shows, palette='Blues_r')\nplt.title('Top-rated TV Shows and Their IMDb Ratings')\nplt.xlabel('IMDb Rating')\nplt.ylabel('TV Show Name')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-10-output-2.png){width=1218 height=523}\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nplt.figure(figsize=(12, 6))\nsns.swarmplot(x='Type', y='Rating', data=df, palette='dark', size=8)\nplt.title('IMDb Ratings Distribution by TV Show Type')\nplt.xlabel('TV Show Type')\nplt.ylabel('IMDb Rating')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_17144\\3663582833.py:2: FutureWarning:\n\nPassing `palette` without assigning `hue` is deprecated.\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning:\n\n50.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning:\n\n23.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning:\n\n40.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-11-output-2.png){width=961 height=523}\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nsns.pairplot(df[['Year', 'Episodes', 'Rating', 'Type']], hue='Type', palette='Set1')\nplt.suptitle('Pair Plot of TV Show Data with Type Hue', y=1.02)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1119: FutureWarning:\n\nuse_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-12-output-2.png){width=339 height=255}\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nfig, ax = plt.subplots(1, figsize = (30,8))\nax = sns.scatterplot(x='Year', y='Rating', data=df, hue='Type', palette='Set1', alpha=0.7)\nax.grid()\nfig.autofmt_xdate()\nplt.xticks(rotation = 90, ha = 'right',\n           fontsize = 10)\nplt.xlim(0, 178)\nplt.title('Correlation between Release Year and IMDb Ratings')\nplt.xlabel('Release Year')\nplt.ylabel('IMDb Rating')\nplt.legend(title='TV Show Type')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\_oldcore.py:1498: FutureWarning:\n\nis_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-13-output-2.png){width=2300 height=664}\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\ntop_rated_descriptions = \" \".join(df['Description'])\nwordcloud = WordCloud(width=800, height=400, background_color='white').generate(top_rated_descriptions)\nplt.figure(figsize=(10, 5))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis('off')\nplt.title('Word Cloud of Top-rated TV Show Descriptions')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-14-output-1.png){width=758 height=409}\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nnumerical_features = df[['Year', 'Episodes', 'Rating']]\n```\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\ndf['Year'] = df['Year'].astype(str)\ndf.loc[:, 'Year'] = df['Year'].str.split('–').str[0].astype(int)\n```\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\ndf.loc[:, 'Episodes'] = pd.to_numeric(df['Episodes'].str.extract('(\\d+)')[0], errors='coerce')\n```\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\n\nfeatures = df[['Year', 'Episodes', 'Rating']]\nfeatures = features.dropna()\nscaler = StandardScaler()\nfeatures_scaled = scaler.fit_transform(features)\nnum_clusters = 3\nkmeans = KMeans(n_clusters=num_clusters, random_state=42)\ndf['Cluster'] = kmeans.fit_predict(features_scaled)\nprint(df[['Name', 'Cluster']])\nplt.scatter(features_scaled[:, 0], features_scaled[:, 1], c=df['Cluster'], cmap='viridis')\nplt.xlabel('Year')\nplt.ylabel('Episodes')\nplt.title('K-Means Clustering')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                               Name  Cluster\n0                   1. Breaking Bad        1\n1                2. Planet Earth II        1\n2                   3. Planet Earth        1\n3               4. Band of Brothers        1\n4                      5. Chernobyl        1\n..                              ...      ...\n240                    241. Gintama        2\n241                  242. Queer Eye        0\n242  243. The Angry Video Game Nerd        2\n243  244. Alfred Hitchcock Presents        2\n244               245. The Night Of        0\n\n[245 rows x 2 columns]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-18-output-3.png){width=576 height=449}\n:::\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\nX = df[['Year', 'Episodes', 'Rating']].dropna()\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=0)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\n\nplt.plot(range(1, 11), wcss, marker='o')\nplt.title('The Elbow Method')\nplt.xlabel('Number of Clusters')\nplt.ylabel('WCSS')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-19-output-2.png){width=589 height=449}\n:::\n:::\n\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nnum_clusters = 4\nclusterer = KMeans(n_clusters=num_clusters, random_state=10)\ncluster_labels = clusterer.fit_predict(X)\nprint(\"Cluster Labels:\")\nprint(cluster_labels)\ndf['Cluster'] = cluster_labels\nprint(\"Data with Cluster Labels:\")\nprint(df[['Name', 'Year', 'Episodes', 'Rating', 'Cluster']])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCluster Labels:\n[0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 1\n 0 1 0 0 0 0 0 0 0 3 0 0 3 0 0 0 1 1 0 0 1 0 1 1 0 0 0 0 0 0 2 0 0 3 0 0 3\n 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0\n 0 3 0 0 0 1 0 0 0 0 1 0 0 3 0 1 0 1 1 3 0 0 0 0 0 0 0 0 0 3 0 0 0 1 0 1 0\n 0 0 1 1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 3 0 0 1 1 0 1 0 1 0 0 0 3 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1\n 0 0 0 0 3 0 0 0 1 1 0 0 0 0 1 0 0 0 3 0 1 3 0]\nData with Cluster Labels:\n                               Name  Year Episodes  Rating  Cluster\n0                   1. Breaking Bad  2008       62     9.5        0\n1                2. Planet Earth II  2016        6     9.5        0\n2                   3. Planet Earth  2006       11     9.4        0\n3               4. Band of Brothers  2001       10     9.4        0\n4                      5. Chernobyl  2019        5     9.4        0\n..                              ...   ...      ...     ...      ...\n240                    241. Gintama  2005      375     8.7        3\n241                  242. Queer Eye  2018       60     8.5        0\n242  243. The Angry Video Game Nerd  2004      225     8.5        1\n243  244. Alfred Hitchcock Presents  1955      268     8.5        3\n244               245. The Night Of  2016        8     8.4        0\n\n[245 rows x 5 columns]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\n```\n:::\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\nfrom sklearn.metrics import silhouette_samples, silhouette_score\nimport matplotlib.cm as cm\nrange_n_clusters = [2, 3, 4, 5, 6]\nfor n_clusters in range_n_clusters:\n    fig, (ax1, ax2) = plt.subplots(1, 2)\n    \n    ax1.set_xlim([-0.1, 1])\n    ax1.set_ylim([0, len(X) + (n_clusters + 1) * 10])\n    clusterer = KMeans(n_clusters=n_clusters, random_state=10)\n    cluster_labels = clusterer.fit_predict(X)\n    silhouette_avg = silhouette_score(X, cluster_labels)\n    print(\"For n_clusters =\", n_clusters,\n          \"The average silhouette_score is :\", silhouette_avg)\n    sample_silhouette_values = silhouette_samples(X, cluster_labels)\n    y_lower = 10\n    for i in range(n_clusters):\n        ith_cluster_silhouette_values = \\\n            sample_silhouette_values[cluster_labels == i]\n        ith_cluster_silhouette_values.sort()\n        size_cluster_i = ith_cluster_silhouette_values.shape[0]\n        y_upper = y_lower + size_cluster_i\n        color = cm.nipy_spectral(float(i) / n_clusters)\n        ax1.fill_betweenx(np.arange(y_lower, y_upper),\n                          0, ith_cluster_silhouette_values,\n                          facecolor=color, edgecolor=color, alpha=0.7)\n\n        ax1.text(-0.05, y_lower + 0.5 * size_cluster_i, str(i))\n        y_lower = y_upper + 10  \n    ax1.set_title(\"The silhouette plot \")\n    ax1.set_xlabel(\"The silhouette coefficient values\")\n    ax1.set_ylabel(\"Cluster label\")\n    ax1.axvline(x=silhouette_avg, color=\"red\", linestyle=\"--\")\n    ax1.set_yticks([])  \n    ax1.set_xticks([-0.1, 0, 0.2, 0.4, 0.6, 0.8, 1])\n    colors = cm.nipy_spectral(cluster_labels.astype(float) / n_clusters)\n    ax2.scatter(X.iloc[:, 0], X.iloc[:, 1], marker='.', s=30, lw=0, alpha=0.7,\n                c=colors, edgecolor='k')\n\n    centers = clusterer.cluster_centers_\n    ax2.scatter(centers[:, 0], centers[:, 1], marker='o',\n                c=\"white\", alpha=1, s=200, edgecolor='k')\n\n    for i, c in enumerate(centers):\n        ax2.scatter(c[0], c[1], marker='$%d$' % i, alpha=1,\n                    s=50, edgecolor='k')\n\n    ax2.set_title(\"The visualization of the clustered data.\")\n    ax2.set_xlabel(\"Feature space for the 1st feature\")\n    ax2.set_ylabel(\"Feature space for the 2nd feature\")\n\n    plt.suptitle((\"Silhouette analysis for KMeans clustering on sample data \"\n                  \"with n_clusters = %d\" % n_clusters),\n                 fontsize=14, fontweight='bold')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nFor n_clusters = 2 The average silhouette_score is : 0.7841282051476728\nFor n_clusters = 3 The average silhouette_score is : 0.7443994662641097\nFor n_clusters = 4 The average silhouette_score is : 0.6346534773168201\nFor n_clusters = 5 The average silhouette_score is : 0.5596258728689598\nFor n_clusters = 6 The average silhouette_score is : 0.5557296368153766\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-21-output-3.png){width=835 height=477}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-21-output-4.png){width=835 height=477}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-21-output-5.png){width=835 height=477}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-21-output-6.png){width=835 height=477}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-21-output-7.png){width=835 height=477}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}